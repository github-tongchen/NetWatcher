apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//  ARouter配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
        //  生成路由文档
        //  路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-${moduleName}.json
        //  arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
    }
}

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    //  JAVA使用JAVA 8特性
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //  Kotlin使用JAVA 8特性
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            //  移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:$rootProject.ext.versions.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.versions.extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.versions.espressoCoreVersion"

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.versions.kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$rootProject.ext.versions.kotlinVersion"
    api "androidx.core:core-ktx:$rootProject.ext.versions.ktxVersion"
    api "androidx.appcompat:appcompat:$rootProject.ext.versions.appcompatVersion"

    //  第三方依赖库
    api "com.hannesdorfmann.mosby3:mvp-lce:$rootProject.ext.versions.mosbyMvpVersion"
    //  ARouter
    api "com.alibaba:arouter-api:$rootProject.ext.versions.arouterApiVersion"
    kapt "com.alibaba:arouter-compiler:$rootProject.ext.versions.arouterCompilerVersion"
    //  Dagger2
    api "com.google.dagger:dagger:$rootProject.ext.versions.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$rootProject.ext.versions.daggerVersion"

    api "com.google.dagger:dagger-android:$rootProject.ext.versions.daggerVersion"
    api "com.google.dagger:dagger-android-support:$rootProject.ext.versions.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.ext.versions.daggerVersion"
    //  Gson
    api "com.google.code.gson:gson:$rootProject.ext.versions.gsonVersion"
    //  Guava
    //  api 'com.google.guava:guava:28.1-android'

}
