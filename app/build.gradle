apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

//  ARouter配置
kapt {
    arguments {
        arg("AROUTER_MODULE_NAME", project.getName())
        //  生成路由文档
        //  路径 : build/generated/source/apt/(debug or release)/com/alibaba/android/arouter/docs/arouter-map-of-${moduleName}.json
        //  arguments = [AROUTER_MODULE_NAME: project.getName(), AROUTER_GENERATE_DOC: "enable"]
    }
}

android {
    compileSdkVersion rootProject.ext.versions.compileSdkVersion
    buildToolsVersion rootProject.ext.versions.buildToolsVersion

    defaultConfig {
        applicationId "com.tongchen.netwatcher"
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode 1
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'

        multiDexEnabled true
    }

    dataBinding {
        enabled = true
    }

    //  JAVA使用JAVA 8特性
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //  Kotlin使用JAVA 8特性
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            //  移除无用的resource文件
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //  自定义打包apk名
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.name}_${variant.versionName}_${releaseTime()}_${variant.buildType.name}.apk"
        }
    }
}

//  获取编译时间
static def releaseTime() {
    return new Date().format("yyyyMMdd-HHmm", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    testImplementation "junit:junit:$rootProject.ext.versions.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.ext.versions.extJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.ext.versions.espressoCoreVersion"


    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'

    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'


    //  ARouter
    kapt "com.alibaba:arouter-compiler:$rootProject.ext.versions.arouterCompilerVersion"

    implementation project(path: ':component_service')

    addModule()
}

def addModule() {
    if (!rootProject.ext.components.isGankAlone) {
        project.dependencies.add("implementation", project.project(':module_gank'))
    }

    if (!rootProject.ext.components.isMZiTuAlone) {
        project.dependencies.add("implementation", project.project(':module_mzitu'))
    }

}